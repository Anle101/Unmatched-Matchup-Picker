{"version":3,"sources":["logo.png","context/globalContext.js","context/inputContext.js","components/CharacterCard.js","components/InputSection.js","App.js","index.js"],"names":["globalContext","createContext","inputContext","CharacterCard","props","SelectedCharacter","character","cardType","card","useState","showInfo","setshowInfo","Result","useContext","springup","titletransition","showInformation","window","innerWidth","useEffect","addEventListener","div","style","className","src","characterImg","alt","name","CombatRange","minion","minionRange","move","InputSection","enableOptions","setenableOptions","MirrorMatch","setMirrorMatch","CobbleofFog","setCobbleofFog","LegendsVolOne","setLegendsVolOne","Buffy","setBuffy","IngenVRaptors","setIngenVRaptors","RobinVBigfoot","setRobinVBigfoot","RedVBeowulf","setRedVBeowulf","BruceLee","setBruceLee","containsCobbleofFog","setcontainsCobbleofFog","containsLegendsVolOne","setcontainsLegendsVolOne","containsBuffy","setcontainsBuffy","containsIngenVRaptors","setcontainsIngenVRaptors","containsRobinVBigfoot","setcontainsRobinVBigfoot","containsRedVBeowulf","setcontainsRedVBeowulf","containsBruceLee","setcontainsBruceLee","setResult","AvailableCharacters","Characters","AvailableMaps","Maps","setChosenCharacter1","setChosenCharacter2","setChosenMap","getRndInteger","min","max","Math","floor","random","i","length","Set","push","console","log","splice","onClick","form","type","defaultChecked","onChange","random2","randommap","health","map","mapImg","App","ChosenCharacter1","ChosenCharacter2","ChosenMap","titleIntro","useSpringRef","useSpring","ref","to","opacity","y","from","config","stiff","springupIntro","default","useChain","Provider","value","img","logo","p","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAAe,MAA0B,iC,eCI5BA,EAAgBC,wBAAc,ICA9BC,EAAeD,wBAAc,I,eC2C3BE,MA1Cf,SAAuBC,GAEnB,IAAMC,EAAmBD,EAAME,UACzBC,EAA0B,GAAdH,EAAMI,KAAY,QAAS,QAHnB,EAIKC,oBAAS,GAJd,mBAInBC,EAJmB,KAIVC,EAJU,KAMpBC,EAASC,qBAAWb,GACpBc,EAAWD,qBAAWb,GACtBe,EAAkBF,qBAAWb,GAE7BgB,EAAkB,WAChBC,OAAOC,YAAc,IACrBP,GAAY,GAEZA,GAAY,IAMpB,OAFAQ,qBAAW,WAAOH,MAAqB,IACvCC,OAAOG,iBAAiB,SAAUJ,GAE9B,mCACI,eAAC,WAASK,IAAV,CAAcC,MAAOV,EAAOE,EAAUC,EAAiBQ,UAAWhB,EAAW,kBAA7E,UACI,qBAAKiB,IAAKnB,EAAkBoB,aAAcC,IAAI,kBAAkBH,UAAU,mBAC1E,sBAAKA,UAAU,iBAAf,UACI,+BAAI,4BAAIlB,EAAkBsB,OAA1B,OACCjB,GACG,qCACI,qBAAKc,IAAKnB,EAAkBuB,YAAaF,IAAI,kBAAkBH,UAAU,kBACzE,4CAAelB,EAAkBwB,OAAO,uBAAK,qBAAKL,IAAKnB,EAAkByB,YAAcP,UAAU,iBAEjG,6CAAgBlB,EAAkB0B,oB,MCge/CC,MA7ff,WAAyB,IAAD,EAEqBvB,oBAAS,GAF9B,mBAEbwB,EAFa,KAECC,EAFD,OAIkBzB,oBAAS,GAJ3B,mBAIb0B,EAJa,KAIAC,EAJA,OAOkB3B,oBAAS,GAP3B,mBAOb4B,EAPa,KAOAC,EAPA,OAUsB7B,oBAAS,GAV/B,mBAUb8B,EAVa,KAUEC,EAVF,OAaM/B,oBAAS,GAbf,mBAabgC,EAba,KAaNC,EAbM,OAgBsBjC,oBAAS,GAhB/B,mBAgBbkC,EAhBa,KAgBEC,EAhBF,OAmBsBnC,oBAAS,GAnB/B,mBAmBboC,EAnBa,KAmBEC,EAnBF,OAsBkBrC,oBAAS,GAtB3B,mBAsBbsC,EAtBa,KAsBAC,EAtBA,OAyBYvC,oBAAS,GAzBrB,mBAyBbwC,EAzBa,KAyBHC,EAzBG,OA4BkCzC,oBAAS,GA5B3C,mBA4Bb0C,EA5Ba,KA4BQC,EA5BR,OA6BsC3C,oBAAS,GA7B/C,mBA6Bb4C,EA7Ba,KA6BUC,EA7BV,OA8BsB7C,oBAAS,GA9B/B,mBA8Bb8C,EA9Ba,KA8BEC,EA9BF,QA+BsC/C,oBAAS,GA/B/C,qBA+BbgD,GA/Ba,MA+BUC,GA/BV,SAgCsCjD,oBAAS,GAhC/C,qBAgCbkD,GAhCa,MAgCUC,GAhCV,SAiCkCnD,oBAAS,GAjC3C,qBAiCboD,GAjCa,MAiCQC,GAjCR,SAkC4BrD,oBAAS,GAlCrC,qBAkCbsD,GAlCa,MAkCKC,GAlCL,MAoCbC,GAAapD,qBAAWb,GAAxBiE,UAEAC,GAAuBrD,qBAAWX,GAAlCgE,oBACAC,GAActD,qBAAWX,GAAzBiE,WACAC,GAAiBvD,qBAAWX,GAA5BkE,cACAC,GAAQxD,qBAAWX,GAAnBmE,KAEAC,GAAuBzD,qBAAWX,GAAlCoE,oBACAC,GAAuB1D,qBAAWX,GAAlCqE,oBACAC,GAAgB3D,qBAAWX,GAA3BsE,aACAzD,GAAmBF,qBAAWb,GAA9Be,gBACAD,GAAYD,qBAAWb,GAAvBc,SAoSP,SAAS2D,GAAcC,EAAKC,GACxB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAOA,EAyD1D,OA5VAvD,qBAAU,WACN,GAAIkB,EAAa,CACf,IAAK,IAAI0C,EAAI,EAAGA,EAAIb,GAAoBc,OAAQD,IACd,iBAA5Bb,GAAoBa,GAAGE,KACzB7B,GAAuB,GAG3B,IAAKD,EAAqB,CACxB,IAAS4B,EAAI,EAAGA,EAAIZ,GAAWa,OAAQD,IACd,iBAAnBZ,GAAWY,GAAGE,KAChBf,GAAoBgB,KAAKf,GAAWY,IAIxC,IAASA,EAAI,EAAGA,EAAIV,GAAKW,OAAQD,IACd,iBAAbV,GAAKU,GAAGE,KACVb,GAAcc,KAAKb,GAAKU,IAG5B3B,GAAuB,SAIzB,GAAID,EAAqB,CACvB,IAAS4B,EAAIb,GAAoBc,OAAQ,EAAGD,GAAK,EAAGA,IAClB,iBAA5Bb,GAAoBa,GAAGE,MACvBE,QAAQC,IAAIlB,GAAoBa,IAChCb,GAAoBmB,OAAON,EAAE,IAInC,IAASA,EAAIX,GAAcY,OAAQ,EAAGD,GAAK,EAAGA,IAClB,iBAAtBX,GAAcW,GAAGE,MACjBE,QAAQC,IAAIhB,GAAcW,IAC1BX,GAAciB,OAAON,EAAE,IAG7B3B,GAAuB,GAI3B+B,QAAQC,IAAIlB,GAAoBc,UAC/B,CAAC3C,IAEJlB,qBAAU,WACR,GAAIoB,EAAe,CACjB,IAAK,IAAIwC,EAAI,EAAGA,EAAIb,GAAoBc,OAAQD,IACd,8BAA5Bb,GAAoBa,GAAGE,KACzB3B,GAAyB,GAG7B,IAAKD,EAAuB,CAC1B,IAAS0B,EAAI,EAAGA,EAAIZ,GAAWa,OAAQD,IACd,8BAAnBZ,GAAWY,GAAGE,KAChBf,GAAoBgB,KAAKf,GAAWY,IAGxC,IAASA,EAAI,EAAGA,EAAIV,GAAKW,OAAQD,IACd,8BAAbV,GAAKU,GAAGE,KACVb,GAAcc,KAAKb,GAAKU,IAG5BzB,GAAyB,SAI3B,GAAID,EAAuB,CACzB,IAAS0B,EAAIb,GAAoBc,OAAQ,EAAGD,GAAK,EAAGA,IAClB,8BAA5Bb,GAAoBa,GAAGE,MACvBE,QAAQC,IAAIlB,GAAoBa,IAChCb,GAAoBmB,OAAON,EAAE,IAInC,IAASA,EAAIX,GAAcY,OAAQ,EAAGD,GAAK,EAAGA,IAClB,8BAAtBX,GAAcW,GAAGE,MACjBE,QAAQC,IAAIhB,GAAcW,IAC1BX,GAAciB,OAAON,EAAE,IAG7BzB,GAAyB,GAI7B6B,QAAQC,IAAIlB,GAAoBc,UAC/B,CAACzC,IAEJpB,qBAAU,WACR,GAAIsB,EAAO,CACT,IAAK,IAAIsC,EAAI,EAAGA,EAAIb,GAAoBc,OAAQD,IACd,SAA5Bb,GAAoBa,GAAGE,KACzBzB,GAAiB,GAGrB,IAAKD,EAAe,CAClB,IAASwB,EAAI,EAAGA,EAAIZ,GAAWa,OAAQD,IACd,SAAnBZ,GAAWY,GAAGE,KAChBf,GAAoBgB,KAAKf,GAAWY,IAGxC,IAASA,EAAI,EAAGA,EAAIV,GAAKW,OAAQD,IACd,SAAbV,GAAKU,GAAGE,KACVb,GAAcc,KAAKb,GAAKU,IAG5BvB,GAAiB,SAInB,GAAID,EAAe,CACjB,IAASwB,EAAIb,GAAoBc,OAAQ,EAAGD,GAAK,EAAGA,IAClB,SAA5Bb,GAAoBa,GAAGE,MACvBE,QAAQC,IAAIlB,GAAoBa,IAChCb,GAAoBmB,OAAON,EAAE,IAGnC,IAASA,EAAIX,GAAcY,OAAQ,EAAGD,GAAK,EAAGA,IAClB,SAAtBX,GAAcW,GAAGE,MACjBE,QAAQC,IAAIhB,GAAcW,IAC1BX,GAAciB,OAAON,EAAE,IAG7BvB,GAAiB,GAIrB2B,QAAQC,IAAIlB,GAAoBc,UAC/B,CAACvC,IAEJtB,qBAAU,WACR,GAAIwB,EAAe,CACjB,IAAK,IAAIoC,EAAI,EAAGA,EAAIb,GAAoBc,OAAQD,IACd,qBAA5Bb,GAAoBa,GAAGE,KACzBvB,IAAyB,GAG7B,IAAKD,GAAuB,CAC1B,IAASsB,EAAI,EAAGA,EAAIZ,GAAWa,OAAQD,IACd,qBAAnBZ,GAAWY,GAAGE,KAChBf,GAAoBgB,KAAKf,GAAWY,IAIxC,IAASA,EAAI,EAAGA,EAAIV,GAAKW,OAAQD,IACd,qBAAbV,GAAKU,GAAGE,KACVb,GAAcc,KAAKb,GAAKU,IAG5BrB,IAAyB,SAI3B,GAAID,GAAuB,CACzB,IAASsB,EAAIb,GAAoBc,OAAQ,EAAGD,GAAK,EAAGA,IAClB,qBAA5Bb,GAAoBa,GAAGE,MACvBE,QAAQC,IAAIlB,GAAoBa,IAChCb,GAAoBmB,OAAON,EAAE,IAInC,IAASA,EAAIX,GAAcY,OAAQ,EAAGD,GAAK,EAAGA,IAClB,qBAAtBX,GAAcW,GAAGE,MACjBE,QAAQC,IAAIhB,GAAcW,IAC1BX,GAAciB,OAAON,EAAE,IAG7BrB,IAAyB,GAI7ByB,QAAQC,IAAIlB,GAAoBc,UAC/B,CAACrC,IAGJxB,qBAAU,WACR,GAAI0B,EAAe,CACjB,IAAK,IAAIkC,EAAI,EAAGA,EAAIb,GAAoBc,OAAQD,IACd,0BAA5Bb,GAAoBa,GAAGE,KACzBrB,IAAyB,GAG7B,IAAKD,GAAuB,CAC1B,IAASoB,EAAI,EAAGA,EAAIZ,GAAWa,OAAQD,IACd,0BAAnBZ,GAAWY,GAAGE,KAChBf,GAAoBgB,KAAKf,GAAWY,IAGxC,IAASA,EAAI,EAAGA,EAAIV,GAAKW,OAAQD,IACd,0BAAbV,GAAKU,GAAGE,KACVb,GAAcc,KAAKb,GAAKU,IAG5BnB,IAAyB,SAI3B,GAAID,GAAuB,CACzB,IAASoB,EAAIb,GAAoBc,OAAQ,EAAGD,GAAK,EAAGA,IAClB,0BAA5Bb,GAAoBa,GAAGE,MACvBE,QAAQC,IAAIlB,GAAoBa,IAChCb,GAAoBmB,OAAON,EAAE,IAGnC,IAASA,EAAIX,GAAcY,OAAQ,EAAGD,GAAK,EAAGA,IAClB,0BAAtBX,GAAcW,GAAGE,MACjBE,QAAQC,IAAIhB,GAAcW,IAC1BX,GAAciB,OAAON,EAAE,IAG7BnB,IAAyB,GAI7BuB,QAAQC,IAAIlB,GAAoBc,UAC/B,CAACnC,IAEJ1B,qBAAU,WACR,GAAI4B,EAAa,CACf,IAAK,IAAIgC,EAAI,EAAGA,EAAIb,GAAoBc,OAAQD,IACd,mBAA5Bb,GAAoBa,GAAGE,KACzBnB,IAAuB,GAG3B,IAAKD,GAAqB,CACxB,IAASkB,EAAI,EAAGA,EAAIZ,GAAWa,OAAQD,IACd,mBAAnBZ,GAAWY,GAAGE,KAChBf,GAAoBgB,KAAKf,GAAWY,IAGxC,IAASA,EAAI,EAAGA,EAAIV,GAAKW,OAAQD,IACd,mBAAbV,GAAKU,GAAGE,KACVb,GAAcc,KAAKb,GAAKU,IAG5BjB,IAAuB,SAIzB,GAAID,GAAqB,CACvB,IAASkB,EAAIb,GAAoBc,OAAQ,EAAGD,GAAK,EAAGA,IAClB,mBAA5Bb,GAAoBa,GAAGE,MACvBE,QAAQC,IAAIlB,GAAoBa,IAChCb,GAAoBmB,OAAON,EAAE,IAGnC,IAASA,EAAIX,GAAcY,OAAQ,EAAGD,GAAK,EAAGA,IAClB,mBAAtBX,GAAcW,GAAGE,MACjBE,QAAQC,IAAIhB,GAAcW,IAC1BX,GAAciB,OAAON,EAAE,IAG7BjB,IAAuB,GAI3BqB,QAAQC,IAAIlB,GAAoBc,UAC/B,CAACjC,IAGJ5B,qBAAU,WACR,GAAI8B,EAAU,CACZ,IAAK,IAAI8B,EAAI,EAAGA,EAAIb,GAAoBc,OAAQD,IACd,aAA5Bb,GAAoBa,GAAGE,KACzBjB,IAAoB,GAGxB,IAAKD,GAAkB,CACrB,IAASgB,EAAI,EAAGA,EAAIZ,GAAWa,OAAQD,IACd,aAAnBZ,GAAWY,GAAGE,KAChBf,GAAoBgB,KAAKf,GAAWY,IAGxCf,IAAoB,SAItB,GAAID,GAAkB,CACpB,IAASgB,EAAIb,GAAoBc,OAAQ,EAAGD,GAAK,EAAGA,IAClB,aAA5Bb,GAAoBa,GAAGE,MACvBE,QAAQC,IAAIlB,GAAoBa,IAChCb,GAAoBmB,OAAON,EAAE,IAGnCf,IAAoB,GAIxBmB,QAAQC,IAAIlB,GAAoBc,UAC/B,CAAC/B,IA6DJ,sCACKhB,GAAkB,cAAC,WAASZ,IAAV,CAAcE,UAAU,UAAUD,MAAQR,GAAUwE,QAAW,kBAAMpD,GAAkBD,IAAvF,qBACnBA,GACA,sBAAKV,UAAU,aAAf,UACI,cAAC,WAASF,IAAV,CAAcE,UAAU,OAAOD,MAASP,GAAiBuE,QAAW,kBAAMpD,GAAkBD,IAA5F,oBACA,eAAC,WAASsD,KAAV,CAAejE,MAASP,GAAiBQ,UAAY,gBAArD,UACA,uBACA,oBAAIA,UAAU,cAAd,qBACA,uBAEI,wBAAOA,UAAU,aAAjB,qCAEI,uBACAI,KAAK,cACL6D,KAAK,WACLjE,UAAU,WACVkE,eAAgBtD,EAChBuD,SA1ZQ,kBAAMtD,GAAgBD,SA+ZlC,uBACA,qBAAIZ,UAAU,cAAd,mBAAkC,mBAAGA,UAAU,iBAAb,4CAClC,uBACA,wBAAOA,UAAU,aAAjB,0BAEI,uBACAI,KAAK,SACL6D,KAAK,WACLjE,UAAU,WACVkE,eAAgBpD,EAChBqD,SAtaQ,kBAAMpD,GAAgBD,SAyalC,uBACA,wBAAOd,UAAU,aAAjB,uCAEI,uBACAI,KAAK,UACL6D,KAAK,WACLjE,UAAU,WACVkE,eAAgBlD,EAChBmD,SA9aU,kBAAMlD,GAAkBD,SAibtC,uBACA,wBAAOhB,UAAU,aAAjB,sCAEI,uBACAI,KAAK,QACL6D,KAAK,WACLjE,UAAU,WACVkE,eAAgBhD,EAChBiD,SAtbE,kBAAMhD,GAAUD,SAybtB,uBACA,wBAAOlB,UAAU,aAAjB,kCAEI,uBACAI,KAAK,eACL6D,KAAK,WACLjE,UAAU,WACVkE,eAAgB9C,EAChB+C,SA9bU,kBAAM9C,GAAkBD,SAictC,uBACA,wBAAOpB,UAAU,aAAjB,mCAEI,uBACAI,KAAK,OACL6D,KAAK,WACLjE,UAAU,WACVkE,eAAgB5C,EAChB6C,SAtcU,kBAAM5C,GAAkBD,SAyctC,uBACA,wBAAOtB,UAAU,aAAjB,4BAEI,uBACAI,KAAK,MACL6D,KAAK,WACLjE,UAAU,WACVkE,eAAgB1C,EAChB2C,SA9cQ,kBAAM1C,GAAgBD,SAidlC,uBACA,wBAAOxB,UAAU,aAAjB,sBAEI,uBACAI,KAAK,QACL6D,KAAK,WACLjE,UAAU,WACVkE,eAAgBxC,EAChByC,SAtdK,kBAAMxC,GAAaD,eA8dtC,cAAC,WAAS5B,IAAV,CAAcC,MAAOR,GAAUS,UAAU,kCAAkC+D,QAhK/E,WACI,IAAIR,EACAa,EACAC,EAEJ,GAAI1B,GAAoBc,OAAS,EAAG,CAClC,GAAK7C,EASD2C,EAASL,GAAc,EAAGP,GAAoBc,OAAS,GACvDW,EAAUlB,GAAc,EAAGP,GAAoBc,OAAS,QARxD,IADAG,QAAQC,IAAI,MACLN,GAAUa,GACjBb,EAASL,GAAc,EAAGP,GAAoBc,OAAS,GACvDW,EAAUlB,GAAc,EAAGP,GAAoBc,OAAS,GAQ5DY,EAAYnB,GAAc,EAAGL,GAAcY,OAAS,OAEjD,CACH,GAAK7C,EAQD2C,EAASL,GAAc,EAAGN,GAAWa,OAAS,GAC9CW,EAAUlB,GAAc,EAAGN,GAAWa,OAAS,QAP/C,KAAOF,GAAUa,GACjBb,EAASL,GAAc,EAAGN,GAAWa,OAAS,GAC9CW,EAAUlB,GAAc,EAAGN,GAAWa,OAAS,GAOnDY,EAAYnB,GAAc,EAAGJ,GAAKW,OAAS,GAMxC3C,GAAgBE,GAAkBE,GAAUE,GAAkBI,GAAgBF,GAM/EyB,GAAoBJ,GAAoBY,IACxCP,GAAoBL,GAAoByB,IACxCnB,GAAaJ,GAAcwB,MAP3BtB,GAAoBH,GAAWW,IAC/BP,GAAoBJ,GAAWwB,IAC/BnB,GAAaH,GAAKuB,KAOtB3B,IAAU,IAgHV,oCCnfFE,EAAa,CACjB,CAACxC,KAAK,SAASC,YAAY,cAAeC,OAAQ,cAAeC,YAAY,aAAc+D,OAAQ,KAAM9D,KAAK,IAAKN,aAAa,cAAewD,IAAI,8BACnJ,CAACtD,KAAK,SAASC,YAAY,aAAcC,OAAQ,aAAcC,YAAY,aAAc+D,OAAQ,KAAK9D,KAAK,IAAKN,aAAa,cAAewD,IAAI,8BAChJ,CAACtD,KAAK,QAAQC,YAAY,aAAcC,OAAQ,aAAcC,YAAY,aAAc+D,OAAQ,KAAM9D,KAAM,IAAIN,aAAa,aAAcwD,IAAI,8BAC/I,CAACtD,KAAK,cAAcC,YAAY,aAAcC,OAAQ,SAAUC,YAAY,cAAe+D,OAAQ,KAAM9D,KAAK,IAAIN,aAAa,cAAewD,IAAI,8BAElJ,CAACtD,KAAK,kBAAkBC,YAAY,aAAcC,OAAQ,aAAcC,YAAY,cAAe+D,OAAQ,KAAK9D,KAAK,IAAIN,aAAa,gBAAiBwD,IAAI,iBAC3J,CAACtD,KAAK,gBAAgBC,YAAY,aAAcC,OAAQ,OAAQC,YAAY,GAAI+D,OAAQ,KAAM9D,KAAK,IAAIN,aAAa,cAAewD,IAAI,iBACvI,CAACtD,KAAK,gBAAgBC,YAAY,aAAcC,OAAQ,OAAQC,YAAY,GAAI+D,OAAQ,KAAM9D,KAAK,IAAKN,aAAa,oBAAqBwD,IAAI,iBAC9I,CAACtD,KAAK,UAAUC,YAAY,aAAcC,OAAQ,cAAeC,YAAY,aAAc+D,OAAQ,KAAM9D,KAAK,IAAIN,aAAa,eAAgBwD,IAAI,iBAEnJ,CAACtD,KAAK,QAAQC,YAAY,aAAcC,OAAQ,kBAAmBC,YAAY,aAAc+D,OAAQ,KAAM9D,KAAK,IAAKN,aAAa,aAAcwD,IAAI,SACpJ,CAACtD,KAAK,QAAQC,YAAY,aAAcC,OAAQ,WAAYC,YAAY,aAAc+D,OAAQ,KAAK9D,KAAK,IAAKN,aAAa,aAAcwD,IAAI,SAC5I,CAACtD,KAAK,SAASC,YAAY,cAAeC,OAAQ,OAAQC,YAAY,cAAe+D,OAAQ,KAAM9D,KAAM,IAAIN,aAAa,cAAewD,IAAI,SAC7I,CAACtD,KAAK,QAAQC,YAAY,aAAcC,OAAQ,QAASC,YAAY,aAAc+D,OAAQ,KAAM9D,KAAK,IAAIN,aAAa,aAAcwD,IAAI,SAEzI,CAACtD,KAAK,UAAUC,YAAY,cAAeC,OAAQ,oBAAqBC,YAAY,cAAe+D,OAAQ,KAAM9D,KAAK,IAAIN,aAAa,aAAcwD,IAAI,qBACzJ,CAACtD,KAAK,cAAcC,YAAY,aAAcC,OAAQ,OAAQC,YAAY,GAAI+D,OAAQ,QAAS9D,KAAK,IAAIN,aAAa,eAAgBwD,IAAI,qBAEzI,CAACtD,KAAK,aAAaC,YAAY,cAAeC,OAAQ,cAAeC,YAAY,aAAc+D,OAAQ,KAAM9D,KAAK,IAAIN,aAAa,iBAAkBwD,IAAI,0BACzJ,CAACtD,KAAK,UAAUC,YAAY,aAAcC,OAAQ,YAAaC,YAAY,aAAc+D,OAAQ,KAAM9D,KAAK,IAAIN,aAAa,eAAgBwD,IAAI,0BAGjJ,CAACtD,KAAK,aAAaC,YAAY,aAAcC,OAAQ,WAAYC,YAAY,cAAe+D,OAAQ,KAAM9D,KAAK,IAAIN,aAAa,iBAAkBwD,IAAI,mBACtJ,CAACtD,KAAK,UAAUC,YAAY,aAAcC,OAAQ,SAAUC,YAAY,aAAc+D,OAAQ,KAAM9D,KAAK,IAAIN,aAAa,eAAgBwD,IAAI,mBAE9I,CAACtD,KAAK,YAAYC,YAAY,aAAcC,OAAQ,OAAQC,YAAY,GAAI+D,OAAQ,KAAM9D,KAAK,IAAIN,aAAa,gBAAiBwD,IAAI,cAGjIZ,EAAO,CACX,CAACyB,IAAI,YAAaC,OAAO,iBAAkBd,IAAI,8BAC/C,CAACa,IAAI,WAAYC,OAAO,gBAAiBd,IAAK,8BAC9C,CAACa,IAAI,OAAQC,OAAO,YAAad,IAAI,iBACrC,CAACa,IAAI,oBAAqBC,OAAO,yBAA0Bd,IAAI,iBAC/D,CAACa,IAAI,iBAAkBC,OAAO,sBAAuBd,IAAI,SACzD,CAACa,IAAI,aAAcC,OAAO,kBAAmBd,IAAI,SACjD,CAACa,IAAI,QAASC,OAAO,aAAcd,IAAI,0BACvC,CAACa,IAAI,kBAAmBC,OAAO,uBAAwBd,IAAI,0BAC3D,CAACa,IAAI,iBAAkBC,OAAO,sBAAuBd,IAAI,qBACzD,CAACa,IAAI,SAAUC,OAAO,cAAed,IAAI,oBAGrCf,EAAsB,GAItBE,EAAgB,GA6DP4B,MA1Df,WAAgB,IAAD,EAEevF,oBAAS,GAFxB,mBAENG,EAFM,KAEEqD,EAFF,OAGWxD,oBAAS,GAHpB,gCAKmCA,mBAAS,CAACkB,KAAK,GAAGC,YAAY,GAAIC,OAAQ,GAAIC,YAAY,GAAI+D,OAAQ,GAAI9D,KAAK,GAAIN,aAAa,GAAIwD,IAAK,MAL5I,mBAKNgB,EALM,KAKY3B,EALZ,OAMmC7D,mBAAS,CAACkB,KAAK,GAAGC,YAAY,GAAIC,OAAQ,GAAIC,YAAY,GAAI+D,OAAQ,GAAI9D,KAAK,GAAIN,aAAa,GAAIwD,IAAK,KAN5I,mBAMNiB,EANM,KAMY3B,EANZ,OAOqB9D,mBAAS,CAACqF,IAAI,GAAIC,OAAO,GAAId,IAAI,KAPtD,mBAONkB,EAPM,KAOK3B,EAPL,KAQP4B,EAAaC,yBAEbtF,EAAkBuF,oBAAU,CAChCC,IAAIH,EACJI,GAAI,CAACC,QAAQ,EAAEC,EAAG,GAClBC,KAAM,CAACF,QAAQ,EAAEC,GAAI,KAErBE,OAAQA,SAAOC,QAGXC,EAAgBT,yBAChBvF,EAAWwF,oBAAU,CACzBC,IAAIO,EACJN,GAAI,CAACE,EAAE,KACPC,KAAM,CAACD,EAAE,KAETE,OAAQA,SAAOG,UAIjB,OADAC,mBAAS,CAACZ,EAAYU,GAAgB,CAAC,EAAE,IAEvC,mCACE,cAAC9G,EAAciH,SAAf,CAAwBC,MAAQ,CAACpG,WAAUC,kBAAiBH,SAAQqD,aAApE,SACE,sBAAK1C,UAAU,MAAf,UACE,cAAC,WAAS4F,IAAV,CAAc3F,IAAK4F,EAAM9F,MAAOP,EAAiBQ,UAAU,iBAAiBG,IAAI,SAChF,eAAC,WAAS2F,EAAV,CAAY/F,MAAOP,EAAiBQ,UAAU,eAA9C,kCACuB,8CAGvB,cAACrB,EAAa+G,SAAd,CAAuBC,MAAQ,CAAC5C,sBAAqBC,sBAAqBC,eAAcN,sBAAqBC,aAAYC,gBAAeC,QAAxI,SACI,cAAC,EAAD,MAGHzD,GAEC,qCAEE,cAAC,EAAD,CAAeN,UAAW2F,EAAkBzF,KAAM,IAClD,qBAAKgB,IAAK2E,EAAUJ,OAAQxE,UAAU,MAAMG,IAAI,eAChD,qBAAIH,UAAU,YAAd,kBAAgC4E,EAAUL,OAC1C,oBAAIvE,UAAU,SAAd,iBACA,cAAC,EAAD,CAAejB,UAAW4F,EAAkB1F,KAAM,eCzGhE8G,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.db6cfad5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.75067140.png\";","import { createContext } from 'react';\r\n\r\n\r\n\r\nexport const globalContext = createContext({});","import { createContext } from 'react';\r\n\r\n\r\n\r\nexport const inputContext = createContext({});","import React, {useContext, useState, useEffect} from 'react'\r\nimport { globalContext } from '../context/globalContext'\r\nimport './CharacterCard.css'\r\nimport {useSpring,animated} from 'react-spring'\r\n\r\nfunction CharacterCard(props) {\r\n\r\n    const SelectedCharacter= props.character;\r\n    const cardType = (props.card == 1)? \"card1\": \"card2\";\r\n    const [showInfo,setshowInfo] = useState(true);\r\n\r\n    const Result = useContext(globalContext);\r\n    const springup = useContext(globalContext);\r\n    const titletransition = useContext(globalContext);\r\n\r\n    const showInformation = () => {\r\n        if (window.innerWidth <= 800) { \r\n            setshowInfo(false);\r\n        } else { \r\n            setshowInfo(true);\r\n        }\r\n    }\r\n\r\n    useEffect (() => {showInformation();}, []);\r\n    window.addEventListener('resize', showInformation);\r\n    return (\r\n        <>\r\n            <animated.div style={Result?springup: titletransition} className={cardType + \" character-card\"}>\r\n                <img src={SelectedCharacter.characterImg} alt=\"character image\" className=\"characterimage\"/>\r\n                <div className=\"character-info\">\r\n                    <h3><u>{SelectedCharacter.name}</u> </h3>\r\n                    {showInfo &&\r\n                        <>\r\n                            <img src={SelectedCharacter.CombatRange} alt=\"character range\" className=\"mainrangelogo\"/> \r\n                            <h5>Sidekick: {SelectedCharacter.minion}<br/><img src={SelectedCharacter.minionRange}  className=\"rangelogo\"/></h5>  \r\n                            \r\n                            <p>Movement -> {SelectedCharacter.move}</p>\r\n                        </>\r\n                    }\r\n                    \r\n                </div>\r\n            </animated.div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CharacterCard","import React, { useState, useContext, useEffect} from 'react'\r\nimport { animated} from 'react-spring'\r\n\r\nimport { globalContext } from '../context/globalContext'\r\nimport { inputContext } from '../context/inputContext'\r\n\r\nimport './InputSection.css'\r\nfunction InputSection() {\r\n\r\n    const [enableOptions,setenableOptions] = useState(false);\r\n\r\n    const [MirrorMatch, setMirrorMatch] = useState(false);\r\n    const updateMirrorMatch = () => setMirrorMatch(!MirrorMatch);\r\n\r\n    const [CobbleofFog, setCobbleofFog] = useState(false);\r\n    const updateCobbleofFog = () => setCobbleofFog(!CobbleofFog);\r\n\r\n    const [LegendsVolOne, setLegendsVolOne] = useState(false);\r\n    const updateLegendsVolOne = () => setLegendsVolOne(!LegendsVolOne);\r\n\r\n    const [Buffy, setBuffy] = useState(false);\r\n    const updateBuffy = () => setBuffy(!Buffy);\r\n    \r\n    const [IngenVRaptors, setIngenVRaptors] = useState(false);\r\n    const updateIngenVRaptors = () => setIngenVRaptors(!IngenVRaptors);\r\n\r\n    const [RobinVBigfoot, setRobinVBigfoot] = useState(false);\r\n    const updateRobinVBigfoot = () => setRobinVBigfoot(!RobinVBigfoot);\r\n\r\n    const [RedVBeowulf, setRedVBeowulf] = useState(false);\r\n    const updateRedVBeowulf = () => setRedVBeowulf(!RedVBeowulf);\r\n\r\n    const [BruceLee, setBruceLee] = useState(false);\r\n    const updateBruceLee = () => setBruceLee(!BruceLee);\r\n\r\n    const [containsCobbleofFog, setcontainsCobbleofFog] = useState(false);\r\n    const [containsLegendsVolOne, setcontainsLegendsVolOne] = useState(false);\r\n    const [containsBuffy, setcontainsBuffy] = useState(false);\r\n    const [containsIngenVRaptors, setcontainsIngenVRaptors] = useState(false);\r\n    const [containsRobinVBigfoot, setcontainsRobinVBigfoot] = useState(false);\r\n    const [containsRedVBeowulf, setcontainsRedVBeowulf] = useState(false);\r\n    const [containsBruceLee, setcontainsBruceLee] = useState(false);\r\n  \r\n    const {setResult} = useContext(globalContext);\r\n\r\n    const {AvailableCharacters} = useContext(inputContext);\r\n    const {Characters} = useContext(inputContext);\r\n    const {AvailableMaps} = useContext(inputContext);\r\n    const {Maps} = useContext(inputContext);\r\n\r\n    const {setChosenCharacter1} = useContext(inputContext);\r\n    const {setChosenCharacter2} = useContext(inputContext);\r\n    const {setChosenMap} = useContext(inputContext);\r\n    const {titletransition} = useContext(globalContext);\r\n    const {springup} = useContext(globalContext);\r\n\r\n    useEffect(() => {\r\n        if (CobbleofFog) {\r\n          for (var i = 0; i < AvailableCharacters.length; i++) {\r\n            if (AvailableCharacters[i].Set==\"Cobble of Fog\") {\r\n              setcontainsCobbleofFog(true);\r\n            }\r\n          }\r\n          if (!containsCobbleofFog) {\r\n            for (var i = 0; i < Characters.length ;i++) {\r\n              if (Characters[i].Set==\"Cobble of Fog\") {\r\n                AvailableCharacters.push(Characters[i]); //Include cobble of fog characters\r\n              }\r\n            } \r\n            \r\n            for (var i = 0; i < Maps.length ;i++) {\r\n              if (Maps[i].Set==\"Cobble of Fog\") {\r\n                AvailableMaps.push(Maps[i]); //Include cobble of fog map\r\n              }\r\n            } \r\n            setcontainsCobbleofFog(true);\r\n          }\r\n        }\r\n        else { // remove the cobble of fog characters and map\r\n          if (containsCobbleofFog) {\r\n            for (var i = AvailableCharacters.length- 1; i >= 0; i--) {\r\n              if (AvailableCharacters[i].Set==\"Cobble of Fog\") {\r\n                  console.log(AvailableCharacters[i]);\r\n                  AvailableCharacters.splice(i,1);\r\n              }\r\n            }\r\n            \r\n            for (var i = AvailableMaps.length- 1; i >= 0; i--) {\r\n              if (AvailableMaps[i].Set==\"Cobble of Fog\") {\r\n                  console.log(AvailableMaps[i]);\r\n                  AvailableMaps.splice(i,1);\r\n              }\r\n            }\r\n            setcontainsCobbleofFog(false);        \r\n          }\r\n          \r\n        }\r\n        console.log(AvailableCharacters.length);\r\n      }, [CobbleofFog]);\r\n    \r\n      useEffect(() => {\r\n        if (LegendsVolOne) {\r\n          for (var i = 0; i < AvailableCharacters.length; i++) {\r\n            if (AvailableCharacters[i].Set==\"Battle of Legends Vol. One\") {\r\n              setcontainsLegendsVolOne(true);\r\n            }\r\n          }\r\n          if (!containsLegendsVolOne) {\r\n            for (var i = 0; i < Characters.length ;i++) {\r\n              if (Characters[i].Set==\"Battle of Legends Vol. One\") {\r\n                AvailableCharacters.push(Characters[i]); //Include Legends Vol One Characters\r\n              }\r\n            }\r\n            for (var i = 0; i < Maps.length ;i++) {\r\n              if (Maps[i].Set==\"Battle of Legends Vol. One\") {\r\n                AvailableMaps.push(Maps[i]); //Include Legends of Vol One maps\r\n              }\r\n            } \r\n            setcontainsLegendsVolOne(true);\r\n          }\r\n        }\r\n        else { // remove the legends Vol One characters\r\n          if (containsLegendsVolOne) {\r\n            for (var i = AvailableCharacters.length- 1; i >= 0; i--) {\r\n              if (AvailableCharacters[i].Set==\"Battle of Legends Vol. One\") {\r\n                  console.log(AvailableCharacters[i]);\r\n                  AvailableCharacters.splice(i,1);\r\n              }\r\n            }\r\n            \r\n            for (var i = AvailableMaps.length- 1; i >= 0; i--) {\r\n              if (AvailableMaps[i].Set==\"Battle of Legends Vol. One\") {\r\n                  console.log(AvailableMaps[i]);\r\n                  AvailableMaps.splice(i,1);\r\n              }\r\n            }\r\n            setcontainsLegendsVolOne(false);        \r\n          }\r\n          \r\n        }\r\n        console.log(AvailableCharacters.length);\r\n      }, [LegendsVolOne]);\r\n    \r\n      useEffect(() => {\r\n        if (Buffy) {\r\n          for (var i = 0; i < AvailableCharacters.length; i++) {\r\n            if (AvailableCharacters[i].Set==\"Buffy\") {\r\n              setcontainsBuffy(true);\r\n            }\r\n          }\r\n          if (!containsBuffy) {\r\n            for (var i = 0; i < Characters.length ;i++) {\r\n              if (Characters[i].Set==\"Buffy\") {\r\n                AvailableCharacters.push(Characters[i]); //Include Legends Vol One Characters\r\n              }\r\n            }\r\n            for (var i = 0; i < Maps.length ;i++) {\r\n              if (Maps[i].Set==\"Buffy\") {\r\n                AvailableMaps.push(Maps[i]); //Include Legends of Vol One maps\r\n              }\r\n            } \r\n            setcontainsBuffy(true);\r\n          }\r\n        }\r\n        else { // remove the legends Vol One characters\r\n          if (containsBuffy) {\r\n            for (var i = AvailableCharacters.length- 1; i >= 0; i--) {\r\n              if (AvailableCharacters[i].Set==\"Buffy\") {\r\n                  console.log(AvailableCharacters[i]);\r\n                  AvailableCharacters.splice(i,1);\r\n              }\r\n            }\r\n            for (var i = AvailableMaps.length- 1; i >= 0; i--) {\r\n              if (AvailableMaps[i].Set==\"Buffy\") {\r\n                  console.log(AvailableMaps[i]);\r\n                  AvailableMaps.splice(i,1);\r\n              }\r\n            }\r\n            setcontainsBuffy(false);        \r\n          }\r\n          \r\n        }\r\n        console.log(AvailableCharacters.length);\r\n      }, [Buffy]);\r\n     \r\n      useEffect(() => {\r\n        if (IngenVRaptors) {\r\n          for (var i = 0; i < AvailableCharacters.length; i++) {\r\n            if (AvailableCharacters[i].Set==\"Ingen VS. Raptors\") {\r\n              setcontainsIngenVRaptors(true);\r\n            }\r\n          }\r\n          if (!containsIngenVRaptors) {\r\n            for (var i = 0; i < Characters.length ;i++) {\r\n              if (Characters[i].Set==\"Ingen VS. Raptors\") {\r\n                AvailableCharacters.push(Characters[i]); //Include Muldoon and the raptors\r\n              }\r\n            }\r\n\r\n            for (var i = 0; i < Maps.length ;i++) {\r\n              if (Maps[i].Set==\"Ingen VS. Raptors\") {\r\n                AvailableMaps.push(Maps[i]); //Include Legends of Vol One maps\r\n              }\r\n            } \r\n            setcontainsIngenVRaptors(true);\r\n          }\r\n        }\r\n        else { // remove the Muldoon and the raptors\r\n          if (containsIngenVRaptors) {\r\n            for (var i = AvailableCharacters.length- 1; i >= 0; i--) {\r\n              if (AvailableCharacters[i].Set==\"Ingen VS. Raptors\") {\r\n                  console.log(AvailableCharacters[i]);\r\n                  AvailableCharacters.splice(i,1);\r\n              }\r\n            }\r\n\r\n            for (var i = AvailableMaps.length- 1; i >= 0; i--) {\r\n              if (AvailableMaps[i].Set==\"Ingen VS. Raptors\") {\r\n                  console.log(AvailableMaps[i]);\r\n                  AvailableMaps.splice(i,1);\r\n              }\r\n            }\r\n            setcontainsIngenVRaptors(false);        \r\n          }\r\n          \r\n        }\r\n        console.log(AvailableCharacters.length);\r\n      }, [IngenVRaptors]);\r\n    \r\n    \r\n      useEffect(() => {\r\n        if (RobinVBigfoot) {\r\n          for (var i = 0; i < AvailableCharacters.length; i++) {\r\n            if (AvailableCharacters[i].Set==\"Robin Hood VS. Bigfoot\") {\r\n              setcontainsRobinVBigfoot(true);\r\n            }\r\n          }\r\n          if (!containsRobinVBigfoot) {\r\n            for (var i = 0; i < Characters.length ;i++) {\r\n              if (Characters[i].Set==\"Robin Hood VS. Bigfoot\") {\r\n                AvailableCharacters.push(Characters[i]); //Include Robin Hood and Bigfoot\r\n              }\r\n            }\r\n            for (var i = 0; i < Maps.length ;i++) {\r\n              if (Maps[i].Set==\"Robin Hood VS. Bigfoot\") {\r\n                AvailableMaps.push(Maps[i]); //Include Legends of Vol One maps\r\n              }\r\n            } \r\n            setcontainsRobinVBigfoot(true);\r\n          }\r\n        }\r\n        else { // remove the Robin Hood and Bigfoot\r\n          if (containsRobinVBigfoot) {\r\n            for (var i = AvailableCharacters.length- 1; i >= 0; i--) {\r\n              if (AvailableCharacters[i].Set==\"Robin Hood VS. Bigfoot\") {\r\n                  console.log(AvailableCharacters[i]);\r\n                  AvailableCharacters.splice(i,1);\r\n              }\r\n            }\r\n            for (var i = AvailableMaps.length- 1; i >= 0; i--) {\r\n              if (AvailableMaps[i].Set==\"Robin Hood VS. Bigfoot\") {\r\n                  console.log(AvailableMaps[i]);\r\n                  AvailableMaps.splice(i,1);\r\n              }\r\n            }\r\n            setcontainsRobinVBigfoot(false);        \r\n          }\r\n          \r\n        }\r\n        console.log(AvailableCharacters.length);\r\n      }, [RobinVBigfoot]);\r\n    \r\n      useEffect(() => {\r\n        if (RedVBeowulf) {\r\n          for (var i = 0; i < AvailableCharacters.length; i++) {\r\n            if (AvailableCharacters[i].Set==\"Red VS. Beowulf\") {\r\n              setcontainsRedVBeowulf(true);\r\n            }\r\n          }\r\n          if (!containsRedVBeowulf) {\r\n            for (var i = 0; i < Characters.length ;i++) {\r\n              if (Characters[i].Set==\"Red VS. Beowulf\") {\r\n                AvailableCharacters.push(Characters[i]); //Include Beowulf and Little Red\r\n              }\r\n            }\r\n            for (var i = 0; i < Maps.length ;i++) {\r\n              if (Maps[i].Set==\"Red VS. Beowulf\") {\r\n                AvailableMaps.push(Maps[i]); //Include Legends of Vol One maps\r\n              }\r\n            } \r\n            setcontainsRedVBeowulf(true);\r\n          }\r\n        }\r\n        else { // remove Red and Beowulf\r\n          if (containsRedVBeowulf) {\r\n            for (var i = AvailableCharacters.length- 1; i >= 0; i--) {\r\n              if (AvailableCharacters[i].Set==\"Red VS. Beowulf\") {\r\n                  console.log(AvailableCharacters[i]);\r\n                  AvailableCharacters.splice(i,1);\r\n              }\r\n            }\r\n            for (var i = AvailableMaps.length- 1; i >= 0; i--) {\r\n              if (AvailableMaps[i].Set==\"Red VS. Beowulf\") {\r\n                  console.log(AvailableMaps[i]);\r\n                  AvailableMaps.splice(i,1);\r\n              }\r\n            }\r\n            setcontainsRedVBeowulf(false);\r\n          }\r\n          \r\n        }\r\n        console.log(AvailableCharacters.length);\r\n      }, [RedVBeowulf]);\r\n      \r\n      \r\n      useEffect(() => {\r\n        if (BruceLee) {\r\n          for (var i = 0; i < AvailableCharacters.length; i++) {\r\n            if (AvailableCharacters[i].Set==\"Bruce Lee\") {\r\n              setcontainsBruceLee(true);\r\n            }\r\n          }\r\n          if (!containsBruceLee) {\r\n            for (var i = 0; i < Characters.length ;i++) {\r\n              if (Characters[i].Set==\"Bruce Lee\") {\r\n                AvailableCharacters.push(Characters[i]); //Include Bruce Lee\r\n              }\r\n            }\r\n            setcontainsBruceLee(true);\r\n          }\r\n        }\r\n        else { // remove Bruce Lee\r\n          if (containsBruceLee) {\r\n            for (var i = AvailableCharacters.length- 1; i >= 0; i--) {\r\n              if (AvailableCharacters[i].Set==\"Bruce Lee\") {\r\n                  console.log(AvailableCharacters[i]);\r\n                  AvailableCharacters.splice(i,1);\r\n              }\r\n            }\r\n            setcontainsBruceLee(false);        \r\n          }\r\n          \r\n        }\r\n        console.log(AvailableCharacters.length);\r\n      }, [BruceLee]);\r\n        \r\n    function getRndInteger(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) ) + min;\r\n    }\r\n    \r\n    \r\n    function SelectCharacter() { \r\n        let random;\r\n        let random2;\r\n        let randommap;\r\n\r\n        if (AvailableCharacters.length > 1) { //If there is a checkbox enabled || Special case, only solo fighters have been selected\r\n          if (!MirrorMatch) {\r\n              console.log(\"hi\");\r\n              while (random == random2) {\r\n              random = getRndInteger(0,(AvailableCharacters.length - 1));\r\n              random2 = getRndInteger(0,(AvailableCharacters.length - 1));\r\n              }\r\n             \r\n          }\r\n          else {\r\n              random = getRndInteger(0,(AvailableCharacters.length - 1));\r\n              random2 = getRndInteger(0,(AvailableCharacters.length - 1)); \r\n          }   \r\n          randommap = getRndInteger(0,(AvailableMaps.length - 1));\r\n        }\r\n        else { // If all checkboxes are blank\r\n          if (!MirrorMatch) {\r\n          \r\n              while (random == random2) {\r\n              random = getRndInteger(0,(Characters.length - 1));\r\n              random2 = getRndInteger(0,(Characters.length - 1));\r\n              }\r\n          }\r\n          else {\r\n              random = getRndInteger(0,(Characters.length - 1));\r\n              random2 = getRndInteger(0,(Characters.length - 1)); \r\n          }\r\n          randommap = getRndInteger(0,(Maps.length - 1));\r\n        }\r\n        \r\n\r\n        \r\n\r\n        if (!CobbleofFog && !LegendsVolOne && !Buffy && !IngenVRaptors && !RedVBeowulf && !RobinVBigfoot) { //Theoretically all checkboxes should be empty, in this case choose any character\r\n            setChosenCharacter1(Characters[random]);\r\n            setChosenCharacter2(Characters[random2]);\r\n            setChosenMap(Maps[randommap]);\r\n        }\r\n        else {\r\n            setChosenCharacter1(AvailableCharacters[random]);\r\n            setChosenCharacter2(AvailableCharacters[random2]);\r\n            setChosenMap(AvailableMaps[randommap]);\r\n        }\r\n        setResult(true);\r\n\r\n    }\r\n     \r\n  \r\n    return (\r\n      <>\r\n        { !enableOptions &&  <animated.div className=\"options\" style= {springup} onClick = {() => setenableOptions(!enableOptions)}>Options</animated.div>}\r\n        { enableOptions &&\r\n          <div className=\"optionmenu\">\r\n              <animated.div className=\"back\" style = {titletransition} onClick = {() => setenableOptions(!enableOptions)}> Back </animated.div>\r\n              <animated.form style = {titletransition} className = \"input-section\">\r\n              <hr />\r\n              <h4 className=\"optiontitle\">OPTIONS</h4>\r\n              <hr />\r\n              \r\n                  <label className=\"form-label\">\r\n                      POSSIBLE MIRROR MATCHES?\r\n                      <input\r\n                      name=\"MirrorMatch\"\r\n                      type=\"checkbox\"\r\n                      className=\"checkbox\"\r\n                      defaultChecked={MirrorMatch}\r\n                      onChange = {updateMirrorMatch}\r\n                      />\r\n                  </label>\r\n\r\n               \r\n                  <hr />\r\n                  <h5 className=\"optiontitle\">PACKS <p className=\"warningmessage\">(Leave empty to select all)</p></h5>\r\n                  <hr />\r\n                  <label className=\"form-label\">\r\n                      Cobble of Fog\r\n                      <input\r\n                      name=\"Cobble\"\r\n                      type=\"checkbox\"\r\n                      className=\"checkbox\"\r\n                      defaultChecked={CobbleofFog}\r\n                      onChange = {updateCobbleofFog}\r\n                      />\r\n                  </label>\r\n                  <br />\r\n                  <label className=\"form-label\">\r\n                      Battle of Legends Vol. One\r\n                      <input\r\n                      name=\"Legends\"\r\n                      type=\"checkbox\"\r\n                      className=\"checkbox\"\r\n                      defaultChecked={LegendsVolOne}\r\n                      onChange = {updateLegendsVolOne}\r\n                      />\r\n                  </label>\r\n                  <br />\r\n                  <label className=\"form-label\">\r\n                      Buffy: The Vampire Slayer\r\n                      <input\r\n                      name=\"Buffy\"\r\n                      type=\"checkbox\"\r\n                      className=\"checkbox\"\r\n                      defaultChecked={Buffy}\r\n                      onChange = {updateBuffy}\r\n                      />\r\n                  </label>\r\n                  <br />\r\n                  <label className=\"form-label\">\r\n                      InGen VS. The Raptors\r\n                      <input\r\n                      name=\"JurassicPark\"\r\n                      type=\"checkbox\"\r\n                      className=\"checkbox\"\r\n                      defaultChecked={IngenVRaptors}\r\n                      onChange = {updateIngenVRaptors}\r\n                      />\r\n                  </label>\r\n                  <br />\r\n                  <label className=\"form-label\">\r\n                      Robin Hood VS. Bigfoot\r\n                      <input\r\n                      name=\"Hood\"\r\n                      type=\"checkbox\"\r\n                      className=\"checkbox\"\r\n                      defaultChecked={RobinVBigfoot}\r\n                      onChange = {updateRobinVBigfoot}\r\n                      />\r\n                  </label>\r\n                  <br />\r\n                  <label className=\"form-label\">\r\n                      Red VS. Beowulf\r\n                      <input\r\n                      name=\"Red\"\r\n                      type=\"checkbox\"\r\n                      className=\"checkbox\"\r\n                      defaultChecked={RedVBeowulf}\r\n                      onChange = {updateRedVBeowulf}\r\n                      />\r\n                  </label>\r\n                  <br />\r\n                  <label className=\"form-label\">\r\n                      Bruce Lee\r\n                      <input\r\n                      name=\"Bruce\"\r\n                      type=\"checkbox\"\r\n                      className=\"checkbox\"\r\n                      defaultChecked={BruceLee}\r\n                      onChange = {updateBruceLee}\r\n                      />\r\n                  </label>\r\n                  </animated.form>\r\n\r\n                  \r\n              </div>\r\n        }\r\n        <animated.div style={springup} className=\"start-button front unselectable\" onClick={SelectCharacter}>GIVE ME MY MATCHUP</animated.div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default InputSection\r\n","import logo from './logo.png';\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport './App.css';\r\n\r\nimport {useSpring,animated, useChain, useSpringRef, config} from 'react-spring';\r\n\r\nimport {globalContext} from './context/globalContext';\r\nimport {inputContext} from './context/inputContext';\r\n\r\nimport CharacterCard from './components/CharacterCard';\r\nimport InputSection from './components/InputSection';\r\n\r\nconst Characters = [\r\n  {name:\"MEDUSA\",CombatRange:\"/ranged.svg\", minion: \"HARPIES (3)\", minionRange:\"/melee.svg\", health: \"16\", move:\"3\", characterImg:\"/medusa.png\", Set:\"Battle of Legends Vol. One\"},\r\n  {name:\"SINBAD\",CombatRange:\"/melee.svg\", minion: \"THE PORTER\", minionRange:\"/melee.svg\", health: \"16\",move:\"2\", characterImg:\"/sinbad.png\", Set:\"Battle of Legends Vol. One\"},\r\n  {name:\"ALICE\",CombatRange:\"/melee.svg\", minion: \"JABBERWOCK\", minionRange:\"/melee.svg\", health: \"13\", move: \"2\",characterImg:\"/alice.png\", Set:\"Battle of Legends Vol. One\"},\r\n  {name:\"KING AUTHUR\",CombatRange:\"/melee.svg\", minion: \"MERLIN\", minionRange:\"/ranged.svg\", health: \"16\", move:\"2\",characterImg:\"/authur.png\", Set:\"Battle of Legends Vol. One\"},\r\n\r\n  {name:\"SHERLOCK HOLMES\",CombatRange:\"/melee.svg\", minion: \"DR. WATSON\", minionRange:\"/ranged.svg\", health: \"16\",move:\"2\",characterImg:\"/sherlock.png\", Set:\"Cobble of Fog\"},\r\n  {name:\"JEKYLL & HYDE\",CombatRange:\"/melee.svg\", minion: \"None\", minionRange:\"\", health: \"16\", move:\"2\",characterImg:\"/jekyll.png\", Set:\"Cobble of Fog\"} ,\r\n  {name:\"INVISIBLE MAN\",CombatRange:\"/melee.svg\", minion: \"None\", minionRange:\"\", health: \"15\", move:\"2\", characterImg:\"/invisibleman.png\", Set:\"Cobble of Fog\"},\r\n  {name:\"DRACULA\",CombatRange:\"/melee.svg\", minion: \"SISTERS (3)\", minionRange:\"/melee.svg\", health: \"13\", move:\"2\",characterImg:\"/dracula.png\", Set:\"Cobble of Fog\"},\r\n\r\n  {name:\"BUFFY\",CombatRange:\"/melee.svg\", minion: \"XANDER OR GILES\", minionRange:\"/melee.svg\", health: \"14\", move:\"3\", characterImg:\"/buffy.png\", Set:\"Buffy\"},\r\n  {name:\"SPIKE\",CombatRange:\"/melee.svg\", minion: \"DRUSILLA\", minionRange:\"/melee.svg\", health: \"15\",move:\"2\", characterImg:\"/spike.png\", Set:\"Buffy\"},\r\n  {name:\"WILLOW\",CombatRange:\"/ranged.svg\", minion: \"TARA\", minionRange:\"/ranged.svg\", health: \"14\", move: \"2\",characterImg:\"/willow.png\", Set:\"Buffy\"},\r\n  {name:\"ANGEL\",CombatRange:\"/melee.svg\", minion: \"FAITH\", minionRange:\"/melee.svg\", health: \"16\", move:\"2\",characterImg:\"/angel.png\", Set:\"Buffy\"},\r\n\r\n  {name:\"Muldoon\",CombatRange:\"/ranged.svg\", minion: \"INGEN WORKERS (3)\", minionRange:\"/ranged.svg\", health: \"14\", move:\"3\",characterImg:\"/ingen.png\", Set:\"Ingen VS. Raptors\"},\r\n  {name:\"The Raptors\",CombatRange:\"/melee.svg\", minion: \"None\", minionRange:\"\", health: \"7 (3)\", move:\"3\",characterImg:\"/raptors.png\", Set:\"Ingen VS. Raptors\"},\r\n\r\n  {name:\"ROBIN HOOD\",CombatRange:\"/ranged.svg\", minion: \"OUTLAWS (4)\", minionRange:\"/melee.svg\", health: \"13\", move:\"2\",characterImg:\"/robinhood.png\", Set:\"Robin Hood VS. Bigfoot\"},\r\n  {name:\"BIGFOOT\",CombatRange:\"/melee.svg\", minion: \"JACKALOPE\", minionRange:\"/melee.svg\", health: \"16\", move:\"3\",characterImg:\"/bigfoot.png\", Set:\"Robin Hood VS. Bigfoot\"},\r\n\r\n\r\n  {name:\"LITTLE RED\",CombatRange:\"/melee.svg\", minion: \"HUNTSMAN\", minionRange:\"/ranged.svg\", health: \"14\", move:\"2\",characterImg:\"/littlered.png\", Set:\"Red VS. Beowulf\"},\r\n  {name:\"BEOWULF\",CombatRange:\"/melee.svg\", minion: \"WIGLAF\", minionRange:\"/melee.svg\", health: \"17\", move:\"2\",characterImg:\"/beowulf.png\", Set:\"Red VS. Beowulf\"},\r\n\r\n  {name:\"BRUCE LEE\",CombatRange:\"/melee.svg\", minion: \"None\", minionRange:\"\", health: \"14\", move:\"3\",characterImg:\"/brucelee.png\", Set:\"Bruce Lee\"},\r\n];\r\n\r\nconst Maps = [\r\n  {map:\"Marmoreal\", mapImg:\"/marmoreal.jpg\", Set:\"Battle of Legends Vol. One\"},\r\n  {map:\"Sarpedon\", mapImg:\"/sarpedon.jpg\", Set: \"Battle of Legends Vol. One\"},\r\n  {map:\"SoHo\", mapImg:\"/soho.jpg\", Set:\"Cobble of Fog\"},\r\n  {map:\"Baskerville Manor\", mapImg:\"/baskerville-manor.jpg\", Set:\"Cobble of Fog\"},\r\n  {map:\"Sunnydale High\", mapImg:\"/sunnydale-high.jpg\", Set:\"Buffy\"},\r\n  {map:\"The Bronze\", mapImg:\"/the-bronze.jpg\", Set:\"Buffy\"},\r\n  {map:\"Yukon\", mapImg:\"/yukon.jpg\", Set:\"Robin Hood VS. Bigfoot\"},\r\n  {map:\"Sherwood Forest\", mapImg:\"/sherwood-forest.jpg\", Set:\"Robin Hood VS. Bigfoot\"},\r\n  {map:\"Raptor Paddock\", mapImg:\"/raptor-paddock.jpg\", Set:\"Ingen VS. Raptors\"},\r\n  {map:\"Heorot\", mapImg:\"/heorot.jpg\", Set:\"Red VS. Beowulf\"},\r\n]\r\n\r\nconst AvailableCharacters = [\r\n  \r\n];\r\n\r\nconst AvailableMaps = [\r\n\r\n];\r\nfunction App() {\r\n  \r\n  const [Result, setResult] = useState(false);\r\n  const [Team, setTeam] = useState(false);\r\n\r\n  const [ChosenCharacter1, setChosenCharacter1] = useState({name:\"\",CombatRange:\"\", minion: \"\", minionRange:\"\", health: \"\", move:\"\", characterImg:\"\", Set: \"\"});\r\n  const [ChosenCharacter2, setChosenCharacter2] = useState({name:\"\",CombatRange:\"\", minion: \"\", minionRange:\"\", health: \"\", move:\"\", characterImg:\"\", Set: \"\"});\r\n  const [ChosenMap, setChosenMap] = useState({map:\"\", mapImg:\"\", Set:\"\"});\r\n  const titleIntro = useSpringRef();\r\n\r\n  const titletransition = useSpring({\r\n    ref:titleIntro,\r\n    to: {opacity:1,y: 0},\r\n    from: {opacity:0,y: -200},\r\n\r\n    config: config.stiff,\r\n  });\r\n\r\n  const springupIntro = useSpringRef();\r\n  const springup = useSpring({\r\n    ref:springupIntro,\r\n    to: {y:380},\r\n    from: {y:700},\r\n \r\n    config: config.default,\r\n  });\r\n \r\n  useChain([titleIntro, springupIntro], [0,0]);\r\n  return (\r\n    <>\r\n      <globalContext.Provider value= {{springup, titletransition, Result, setResult}}>\r\n        <div className=\"App\">\r\n          <animated.img src={logo} style={titletransition} className=\"App-logo front\" alt=\"logo\" />\r\n          <animated.p style={titletransition} className=\"front slogan\">\r\n            IN BATTLE, THERE ARE <b>NO EQUALS.</b>\r\n          </animated.p>\r\n    \r\n          <inputContext.Provider value= {{setChosenCharacter1, setChosenCharacter2, setChosenMap, AvailableCharacters, Characters, AvailableMaps, Maps}}>\r\n              <InputSection />\r\n          </inputContext.Provider>\r\n\r\n          {Result && \r\n          \r\n            <>\r\n            \r\n              <CharacterCard character={ChosenCharacter1} card={1}/>\r\n              <img src={ChosenMap.mapImg} className=\"map\" alt=\"chosen map\"></img>\r\n              <h5 className=\"map-title\">Map: {ChosenMap.map}</h5>\r\n              <h1 className=\"middle\">VS.</h1>\r\n              <CharacterCard character={ChosenCharacter2} card={2}/>\r\n            </>\r\n          }\r\n        </div>\r\n      </globalContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}